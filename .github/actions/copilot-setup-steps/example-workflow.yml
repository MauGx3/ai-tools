# Example workflow demonstrating the copilot-setup-steps action
# This file is for reference only - copy and adapt it to your needs

name: Example Jekyll Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      pages_enabled: ${{ steps.setup.outputs.pages-enabled }}
    steps:
      # Use the copilot-setup-steps action
      - name: Setup Environment
        id: setup
        uses: ./.github/actions/copilot-setup-steps
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0

      # Build with Jekyll using the action's outputs
      - name: Build with Jekyll
        run: |
          if [[ "${{ steps.setup.outputs.pages-enabled }}" == "true" ]]; then
            bundle exec jekyll build --baseurl "${{ steps.setup.outputs.base-path }}"
          else
            bundle exec jekyll build
          fi
        env:
          JEKYLL_ENV: production

      # Upload artifact if Pages is configured
      - name: Upload artifact
        if: steps.setup.outputs.pages-enabled == 'true'
        uses: actions/upload-pages-artifact@v3

      # Upload for preview if Pages is not configured
      - name: Upload artifact for preview
        if: steps.setup.outputs.pages-enabled == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: _site/
          retention-days: 1

  deploy:
    # Only deploy if Pages is configured and we're on main branch
    if: github.ref == 'refs/heads/main' && needs.build.outputs.pages_enabled == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
