name: "Example: Jekyll Build (uses copilot-setup-steps action)"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      pages_enabled: ${{ steps.setup.outputs.pages-enabled }}
    steps:
      - name: Setup Environment
        id: setup
        name: "Example: Jekyll Build (uses copilot-setup-steps action)"

        on:
          push:
            branches: [ "main" ]
          pull_request:
            branches: [ "main" ]
          workflow_dispatch:

        permissions:
          contents: read
          pages: write
          id-token: write

        concurrency:
          group: "pages"
          cancel-in-progress: false

        jobs:
          build:
            runs-on: ubuntu-latest
            outputs:
              pages_enabled: ${{ steps.setup.outputs.pages-enabled }}
            steps:
              - name: Setup Environment
                id: setup
                uses: ./.github/actions/copilot-setup-steps
                with:
                  ruby-version: '3.1'
                  bundler-cache: true
                  cache-version: 0

              - name: Build with Jekyll
                run: |
                  if [[ "${{ steps.setup.outputs.pages-enabled }}" == "true" ]]; then
                    bundle exec jekyll build --baseurl "${{ steps.setup.outputs.base-path }}"
                  else
                    bundle exec jekyll build
                  fi
                env:
                  JEKYLL_ENV: production

              - name: Upload artifact for preview
                if: steps.setup.outputs.pages-enabled == 'false'
                uses: actions/upload-artifact@v4
                with:
                  name: github-pages
                  path: _site/
                  retention-days: 1

          deploy:
            if: github.ref == 'refs/heads/main' && needs.build.outputs.pages_enabled == 'true'
            runs-on: ubuntu-latest
            needs: build
            steps:
              - name: Deploy to GitHub Pages
                id: deployment
                uses: actions/deploy-pages@v4
    steps:
